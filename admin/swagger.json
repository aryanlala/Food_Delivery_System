{
    "openapi": "3.0.0",
    "info": {
        "title": "Food Delivery Admin APIs",
        "version": "1.0.0",
        "description": "API documentation for the Food Delivery system"
    },
    "servers": [
        {
            "url": "https://food-delivery-system-admin-onfw.onrender.com/",
            "description": "Remote"
        },
        {
            "url": "http://localhost:3000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/admin/customers": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "requestBody": {
                    "description": "Customer object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/api/admin/customers/{id}": {
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update an existing customer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Customer object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/admin/customers/{id}/deactivate": {
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Deactivate a customer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Status update to deactivate user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeactivateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer deactivated successfully"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/admin/deliverypersonnel": {
            "post": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Create a new delivery personnel",
                "requestBody": {
                    "description": "Delivery personnel object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryPersonnel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Delivery personnel created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryPersonnel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/api/admin/deliverypersonnel/{id}": {
            "put": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Update an existing delivery personnel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delivery personnel ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Delivery personnel object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryPersonnel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Delivery personnel updated successfully"
                    },
                    "404": {
                        "description": "Delivery personnel not found"
                    }
                }
            }
        },
        "/api/admin/deliverypersonnel/{id}/deactivate": {
            "put": {
                "tags": [
                    "DeliveryPersonnel"
                ],
                "summary": "Deactivate a deliverypersonnel",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Deliverypersonnel ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Status update to deactivate deliverypersonnel",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeactivateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Deliverypersonnel deactivated successfully"
                    },
                    "404": {
                        "description": "Deliverypersonnel not found"
                    }
                }
            }
        },
        "/api/admin/restaurant": {
            "post": {
                "tags": [
                    "Restaurant"
                ],
                "summary": "Create a new restaurant",
                "requestBody": {
                    "description": "Restaurant object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Restaurant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Restaurant"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                }
            }
        },
        "/api/admin/restaurant/{id}": {
            "put": {
                "tags": [
                    "Restaurant"
                ],
                "summary": "Update an existing restaurant",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Restaurant ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Restaurant object to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restaurant updated successfully"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    }
                }
            }
        },
        "/api/admin/restaurant/{id}/deactivate": {
            "put": {
                "tags": [
                    "Restaurant"
                ],
                "summary": "Deactivate a restaurant",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Restaurant ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Status update to deactivate restaurant",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeactivateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restaurant deactivated successfully"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    }
                }
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "View all orders",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/{id}/status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Order ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order status update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/admin/reports/popular-restaurants": {
            "get": {
                "summary": "Get the most popular restaurants",
                "description": "This endpoint allows an admin to retrieve the most popular restaurants based on the number of orders placed.",
                "operationId": "getMostPopularRestaurants",
                "tags": [
                    "Reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of popular restaurants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "restaurantId": {
                                                "type": "integer",
                                                "description": "ID of the restaurant"
                                            },
                                            "orderCount": {
                                                "type": "integer",
                                                "description": "Number of orders placed for this restaurant"
                                            },
                                            "restaurant": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the restaurant"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/admin/reports/average-delivery-time": {
            "get": {
                "summary": "Get average delivery time",
                "description": "This endpoint calculates the average time it takes for orders to be delivered.",
                "operationId": "getAverageDeliveryTime",
                "tags": [
                    "Reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Average delivery time in days",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "averageDeliveryTime": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "The average delivery time in days"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/admin/reports/order-trends": {
            "get": {
                "summary": "Get order trends by day",
                "description": "This endpoint returns the number of orders placed on each day.",
                "operationId": "getOrderTrends",
                "tags": [
                    "Reports"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order trends by day",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "orderDate": {
                                                "type": "string",
                                                "format": "date",
                                                "description": "The date when the orders were placed"
                                            },
                                            "orderCount": {
                                                "type": "integer",
                                                "description": "Number of orders placed on this date"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/admin/reports/active-users-by-role": {
            "get": {
                "summary": "Get active users by role",
                "tags": [
                    "PlatformActivity"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Fetch the number of active users based on a specific role (customer, delivery_personnel, or restaurant).",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "customer",
                                "delivery_personnel",
                                "restaurant"
                            ],
                            "example": "customer"
                        },
                        "description": "Role of the user to filter by. One of `customer`, `delivery_personnel`, or `restaurant`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The count of active users for the specified role.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "activeUsers": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "customer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Role is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role is required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/delivery-activity": {
            "get": {
                "summary": "Get delivery activity",
                "description": "Retrieve the number of active and completed deliveries on the platform.",
                "tags": [
                    "PlatformActivity"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The count of active and completed deliveries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "activeDeliveries": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "completedDeliveries": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/order-statuses": {
            "get": {
                "summary": "Get order statuses",
                "description": "Retrieve the count of orders grouped by their status (e.g., 'pending', 'in_progress', 'completed').",
                "tags": [
                    "PlatformActivity"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of order statuses with their corresponding counts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "status": {
                                                "type": "string",
                                                "example": "pending"
                                            },
                                            "statusCount": {
                                                "type": "integer",
                                                "example": 5
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Full name of the user"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "CUSTOMER",
                            "RESTAURANT_OWNER",
                            "DELIVERY_PERSON"
                        ],
                        "description": "Role of the user"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "default": "active"
                    }
                }
            },
            "DeliveryPersonnel": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Full name of the delivery personnel"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "DELIVERY_PERSON"
                        ],
                        "description": "Role of the user"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "default": "active"
                    },
                    "available": {
                        "type": "boolean",
                        "description": "Availability status of the delivery personnel"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact number of the delivery personnel"
                    },
                    "vehicleType": {
                        "type": "string",
                        "description": "Vehicle type (e.g., bike, car)"
                    }
                }
            },
            "DeactivateUser": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "inactive"
                        ]
                    }
                }
            },
            "Order": {
                "type": "object",
                "required": [
                    "id",
                    "customer",
                    "restaurant",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Order ID"
                    },
                    "customer_id": {
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "restaurant_id": {
                        "type": "string",
                        "description": "Restaurant ID"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "completed"
                        ]
                    },
                    "orderTime": {
                        "type": "string",
                        "description": "Order datetime"
                    },
                    "delivery_time": {
                        "type": "string",
                        "description": "Delivery datetime"
                    }
                }
            },
            "UpdateOrderStatus": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "completed"
                        ]
                    }
                }
            },
            "Restaurant": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Restaurant name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Restaurant contact email"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for restaurant login"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "RESTAURANT_OWNER"
                        ],
                        "description": "Role of the user"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "default": "active"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT Bearer token for admin authentication. This should be passed in the Authorization header as 'Bearer <your-token>'"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
